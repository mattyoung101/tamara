#!/usr/bin/env python3
# TaMaRa: An automated triple modular redundancy EDA flow for Yosys.
#
# Copyright (c) 2025 Matt Young.
#
# This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL
# was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
import argparse

"""
Generates a Yosys test script from a SystemVerilog file.
"""

TEMPLATE = """# Automatically generated by gen_test.py for:
# Verilog file: {verilog_file}
# Top module: {top_module}

plugin -i libtamara.so

read_verilog -sv ../tests/verilog/{verilog_file}
hierarchy -top {top_module}

prep
splitcells
splitnets
write_rtlil

tamara_tmr
check
write_rtlil
write_verilog
show -colors 420
"""


def main(verilog_file: str, top_module: str):
    with open(f"scripts/{top_module}.ys", "w") as f:
        print(TEMPLATE.format(verilog_file=verilog_file, top_module=top_module), file=f)
        print(f"OK. Written to scripts/{top_module}.ys")


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("verilog_file", help="Name of Verilog file in `verilog` dir, e.g. file.v")
    parser.add_argument("top_module", help="Name of top module in Verilog file, e.g. not_2bit")
    args = parser.parse_args()
    main(args.verilog_file, args.top_module)
