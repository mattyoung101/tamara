@Article{Shah2019,
  author        = {David Shah and Eddie Hung and Clifford Wolf and Serge Bazanski and Dan Gisselquist and Miodrag Milanovic},
  journal       = {CoRR},
  title         = {Yosys+nextpnr: an Open Source Framework from Verilog to Bitstream for Commercial FPGAs},
  year          = {2019},
  volume        = {abs/1903.10407},
  archiveprefix = {arXiv},
  bibsource     = {dblp computer science bibliography, https://dblp.org},
  biburl        = {https://dblp.org/rec/journals/corr/abs-1903-10407.bib},
  eprint        = {1903.10407},
  file          = {:/home/matt/Dropbox/Digital Library/Papers/Computer Engineering/EDA/1903.10407v1.pdf:PDF},
  timestamp     = {Mon, 01 Apr 2019 14:07:37 +0200},
  url           = {http://arxiv.org/abs/1903.10407},
}

@Misc{Engelhardt2024,
  author       = {N. Engelhardt},
  howpublished = {Personal communication},
  month        = may,
  title        = {Jitsi meeting with author},
  year         = {2024},
}

@InProceedings{Johnson2010,
  author     = {Johnson, Jonathan M. and Wirthlin, Michael J.},
  booktitle  = {Proceedings of the 18th annual ACM/SIGDA international symposium on Field programmable gate arrays},
  title      = {Voter insertion algorithms for FPGA designs using triple modular redundancy},
  year       = {2010},
  month      = feb,
  publisher  = {ACM},
  series     = {FPGA ’10},
  abstract   = {Triple Modular Redundancy (TMR) is a common reliability technique for mitigating single event upsets (SEUs) in FPGA designs operating in radiation environments. For FPGA systems that employ configuration scrubbing, majority voters are needed in all feedback paths to ensure proper synchronization between the TMR replicates. Synchronization voters, however, consume additional resources and impact system timing. This paper will introduce and contrast four algorithms for inserting synchronization voters while automatically performing TMR. The area cost and timing impact of each algorithm on a number of circuit benchmarks will be reported. This paper will demonstrate that one of the algorithms provides the best overall timing performance results with an average 9.8% increase in critical path length over a triplicated design without voters. Another algorithm provides far better area results at a slightly higher timing cost (an average 2.1% area increase over a triplicated design without voters).},
  collection = {FPGA ’10},
  doi        = {10.1145/1723112.1723154},
  file       = {:/home/matt/Dropbox/Digital Library/Papers/Computer Engineering/Fault-Tolerance/TMR/Voter Insertion Algorithms for FPGA Designs Using TMR.pdf:PDF},
  keywords   = {B.8.1 [Performance and Reliability]: Reliability, Testing, and Fault-Tolerance Reliability, Design, Algorithms},
}

@InProceedings{Herklotz2020,
  author    = {Yann Herklotz and John Wickerson},
  booktitle = {ACM/SIGDA Int. Symp. on Field-Programmable Gate Arrays},
  title     = {Finding and Understanding Bugs in {FPGA} Synthesis Tools},
  year      = {2020},
  address   = {Seaside, CA, USA},
  publisher = {ACM},
  series    = {FPGA '20},
  doi       = {10.1145/3373087.3375310},
  isbn      = {978-1-4503-7099-8/20/02},
  keywords  = {automated testing, compiler defect, compiler testing, random program generation, random testing},
  numpages  = {11},
}

@Article{Kulis2017,
  author    = {Kulis, Syzmon},
  journal   = {Journal of Instrumentation},
  title     = {Single Event Effects mitigation with TMRG tool},
  year      = {2017},
  issn      = {1748-0221},
  month     = jan,
  number    = {01},
  pages     = {C01082--C01082},
  volume    = {12},
  abstract  = {View the article online for updates and enhancements. You may also like High throughput N-modular redundancy for error correction design of memristive stateful logic Xi Zhu, , Hui Xu et al.},
  doi       = {10.1088/1748-0221/12/01/c01082},
  file      = {:/home/matt/Dropbox/Digital Library/Papers/Computer Engineering/Fault-Tolerance/TMR/Single Event Effects mitigation with TMRG tool.pdf:PDF},
  publisher = {IOP Publishing},
}

@InProceedings{Benites2018,
  author    = {Benites, Luis Alberto Contreras and Kastensmidt, Fernanda Lima},
  booktitle = {2018 IEEE 19th Latin-American Test Symposium (LATS)},
  title     = {Automated design flow for applying Triple Modular Redundancy (TMR) in complex digital circuits},
  year      = {2018},
  pages     = {1-4},
  doi       = {10.1109/LATW.2018.8349668},
  keywords  = {Tunneling magnetoresistance;Logic gates;Circuit faults;Optimization;Tools;Redundancy;Transient analysis;TMR;ASIC;equivalence checking;fault tolerant design;radiation effects},
}

@InProceedings{Skouson2020,
  author    = {{D}allin {S}kouson and {A}ndrew {K}eller and {M}ichael {W}irthlin},
  booktitle = {{P}roceedings of the 19th {P}ython in {S}cience {C}onference},
  title     = {{N}etlist {A}nalysis and {T}ransformations {U}sing {S}py{D}r{N}et},
  year      = {2020},
  editor    = {{M}eghann {A}garwal and {C}hris {C}alloway and {D}illon {N}iederhut and {D}avid {S}hupe},
  pages     = {40 - 47},
  doi       = {10.25080/Majora-342d178e-006},
}

@InProceedings{Lee2017,
  author    = {Lee, Ganghee and Agiakatsikas, Dimitris and Wu, Tong and Cetin, Ediz and Diessel, Oliver},
  booktitle = {2017 IEEE 25th Annual International Symposium on Field-Programmable Custom Computing Machines (FCCM)},
  title     = {TLegUp: A TMR Code Generation Tool for SRAM-Based FPGA Applications Using HLS},
  year      = {2017},
  pages     = {129-132},
  doi       = {10.1109/FCCM.2017.57},
  keywords  = {Field programmable gate arrays;Benchmark testing;Tunneling magnetoresistance;Tools;Clocks;Registers;Hardware design languages;TMR;HLS;FPGA},
}

@Comment{jabref-meta: databaseType:bibtex;}
