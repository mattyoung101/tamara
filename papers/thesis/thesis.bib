@Article{Shah2019,
  author        = {David Shah and Eddie Hung and Clifford Wolf and Serge Bazanski and Dan Gisselquist and Miodrag Milanovic},
  journal       = {CoRR},
  title         = {Yosys+nextpnr: an Open Source Framework from Verilog to Bitstream for Commercial FPGAs},
  year          = {2019},
  volume        = {abs/1903.10407},
  archiveprefix = {arXiv},
  bibsource     = {dblp computer science bibliography, https://dblp.org},
  biburl        = {https://dblp.org/rec/journals/corr/abs-1903-10407.bib},
  eprint        = {1903.10407},
  file          = {:/home/matt/Dropbox/Digital Library/Papers/Computer Engineering/EDA/1903.10407v1.pdf:PDF},
  timestamp     = {Mon, 01 Apr 2019 14:07:37 +0200},
  url           = {http://arxiv.org/abs/1903.10407},
}

@TechReport{Ajayi2019,
  author   = {Ajayi, Tutu and Blaauw, David and Chan, Tuck-Boon and Cheng, Chung-Kuan and Chhabria, Vidya and Choo, Kyojin and Coltella, Matteo and Dobre, Sorin and Dreslinski, Ronald and Fogac, Mateus and Hashemi, Soheil and Hosny, Abdelrahman and Kahng, Andrew and Kim, Minsoo and Li, Jiajia and Liang, Zhaoxin and Mallappa, Uday and Penzes, Paul and Pradipta, Geraldo and Reda, Sherief and Rovinski, Austin and Samadi, Kambiz and Sapatnekar, Sachin and Saul, Lawrence and Sechen, Carl and Srinivas, Vaishnav and Swartz, William and Sylvester, Dennis and Urquhart, David and Wang, Lutong and Woo, Mingyu and Xu, Bangqi and Diego, Uc and Qualcomm and Arm},
  title    = {OpenROAD: Toward a Self-Driving, Open-Source Digital Layout Implementation Tool Chain},
  year     = {2019},
  number   = {specific},
  abstract = {We describe the scope and initial efforts of Open-ROAD, a project in the DARPA IDEA program that pursues open-source tools for 24-hour, "no human in the loop" digital layout generation across integrated circuit, package and board domains. If successful, OpenROAD will help realize the IDEA goal of "democratization of hardware design", by reducing cost, expertise, schedule and risk barriers that confront system designers today. Several novel technical directions follow directly from the IDEA program's 24-hour, no-humans goals. These include (i) enablement of pervasive machine learning in and around design tools and flows, (ii) parallel search and optimization to exploit available cloud resources, (iii) partitioning and problem decomposition to reduce solution latency, and (iv) layout generation methodologies that provide "freedoms from choice" without undue loss of design quality. Further, the development of open-source, self-driving design tools is in and of itself a "moon shot" with numerous technical and cultural challenges.},
  file     = {:/home/matt/Dropbox/Digital Library/Papers/Computer Engineering/EDA/openroad.pdf:PDF},
  url      = {https://vlsicad.ucsd.edu/Publications/Conferences/370/c370.pdf},
}

@Misc{Engelhardt2024,
  author       = {N. Engelhardt},
  howpublished = {Personal communication},
  month        = may,
  title        = {Personal communication},
  year         = {2024},
}

@TechReport{Bradner1997,
  author      = {Scott Bradner},
  institution = {Internet Engineering Task Force},
  title       = {Key words for use in RFCs to Indicate Requirement Levels},
  year        = {1997},
  month       = mar,
  type        = {techreport},
  url         = {https://www.ietf.org/rfc/rfc2119.txt},
}

@Article{Lyons1962,
  author   = {Lyons, R and Vanderkul, W},
  journal  = {IBM Journal of Research and Development},
  title    = {The Use of Triple-Modular Redundancy to Improve Computer Reliability},
  year     = {1962},
  pages    = {200-209},
  volume   = {6},
  abstract = {One of the proposed techniques for meeting the severe reliability requirements inherent in certain future computer applications i s described. This technique involves the use of triple-modular redundancy, which is essentially the use of the two-out-of-three voting concept a t a low level. Effects of imperfect votingcircuitryand ofvarious interconnectionsof logical elementsareassessed. A hypothetical triple-modular redundant computer is subjected t o a Monte Carlo program on the IBM 704, which simulates component failures. Reliability is thereby determined and compared with reliability obtained by analytical calculations based on simplifying assumptions.},
  file     = {:/home/matt/Dropbox/Digital Library/Papers/Computer Engineering/Fault-Tolerance/TMR/The Use of Triple-Modular Redundancy.pdf:PDF},
}

@Misc{OBryan2021,
  author    = {Martha O'Bryan},
  month     = oct,
  title     = {Single Event Effects},
  year      = {2021},
  timestamp = {2024-07-29},
  url       = {https://radhome.gsfc.nasa.gov/radhome/see.htm},
  urldate   = {2024-07-29}
}

@Misc{synlig,
    title = {Synlig - SystemVerilog support for Yosys},
    year = {2024},
    urldate = {2024-08-04},
    url = {https://github.com/chipsalliance/synlig}
}

@Misc{skywater,
    title = {SkyWater Open Source PDK},
    year = {2023},
    urldate = {2024-08-11},
    url = {https://github.com/google/skywater-pdk}
}

@InProceedings{Wolf2013,
  author    = {Wolf, Clifford and Glaser, Johann},
  booktitle = {Proceedings of Austrochip 2013},
  title     = {Yosys - A Free Verilog Synthesis Suite},
  year      = {2013},
  number    = {in-},
  abstract  = {Most of todays digital design work is done using hardware description languages such as Verilog HDL or VHDL. HDL synthesis is used to translate that HDL code to digital circuits. Yosys is the first free and open source software for Verilog HDL synthesis which supports the vast majority of synthesizable Verilog features. Yosys is built as an extensible framework so it can be used easily as basis for custom synthesis flows and as environment for the implementation and research on new synthesis algorithms. Yosys has special emphasis on support for coarsegrain logic, making it ideal for algorithms such as logic mapping to DSP cells in FPGAs or synthesis for custom coarse-grain reconfigurable hardware. Yosys has mature support for Verilog HDL and is able to synthesize complex real-world Verilog designs. Example design flows for fine-grain and coarse-grain architectures are presented and discussed. The availability of Yosys under a liberal open source license can greatly improve reproducibility of scientific publications, when Yosys is used as basis for reference implementations of new algorithms instead of closed-source alternatives.},
  file      = {:/home/matt/Dropbox/Digital Library/Papers/Computer Engineering/EDA/yosys-austrochip2013.pdf:PDF},
  type      = {techreport},
  url       = {http://yosyshq.net/yosys/files/yosys-austrochip2013.pdf},
}

@InProceedings{Johnson2010,
  author     = {Johnson, Jonathan M. and Wirthlin, Michael J.},
  booktitle  = {Proceedings of the 18th annual ACM/SIGDA international symposium on Field programmable gate arrays},
  title      = {Voter insertion algorithms for FPGA designs using triple modular redundancy},
  year       = {2010},
  month      = feb,
  publisher  = {ACM},
  series     = {FPGA ’10},
  abstract   = {Triple Modular Redundancy (TMR) is a common reliability technique for mitigating single event upsets (SEUs) in FPGA designs operating in radiation environments. For FPGA systems that employ configuration scrubbing, majority voters are needed in all feedback paths to ensure proper synchronization between the TMR replicates. Synchronization voters, however, consume additional resources and impact system timing. This paper will introduce and contrast four algorithms for inserting synchronization voters while automatically performing TMR. The area cost and timing impact of each algorithm on a number of circuit benchmarks will be reported. This paper will demonstrate that one of the algorithms provides the best overall timing performance results with an average 9.8% increase in critical path length over a triplicated design without voters. Another algorithm provides far better area results at a slightly higher timing cost (an average 2.1% area increase over a triplicated design without voters).},
  collection = {FPGA ’10},
  doi        = {10.1145/1723112.1723154},
  file       = {:/home/matt/Dropbox/Digital Library/Papers/Computer Engineering/Fault-Tolerance/TMR/Voter Insertion Algorithms for FPGA Designs Using TMR.pdf:PDF},
  keywords   = {B.8.1 [Performance and Reliability]: Reliability, Testing, and Fault-Tolerance Reliability, Design, Algorithms},
}

@MastersThesis{Johnson2010a,
  author = {Johnson, Jonathan},
  school = {Brigham Young University - Provo},
  title  = {Synchronization Voter Insertion Algorithms for FPGA Designs Using Triple Modular Redundancy},
  year   = {2010},
  month  = {4},
  type   = {mathesis},
  date   = {2010-04},
  file   = {:/home/matt/Dropbox/Digital Library/Papers/Computer Engineering/Fault-Tolerance/TMR/Synchronization Voter Insertion Algorithms for FPGA Designs Using.pdf:PDF},
  url    = {https://scholarsarchive.byu.edu/etd/2068/},
}

@InProceedings{Skouson2020,
  author    = {{D}allin {S}kouson and {A}ndrew {K}eller and {M}ichael {W}irthlin},
  booktitle = {{P}roceedings of the 19th {P}ython in {S}cience {C}onference},
  title     = {{N}etlist {A}nalysis and {T}ransformations {U}sing {S}py{D}r{N}et},
  year      = {2020},
  editor    = {{M}eghann {A}garwal and {C}hris {C}alloway and {D}illon {N}iederhut and {D}avid {S}hupe},
  pages     = {40 - 47},
  doi       = {10.25080/Majora-342d178e-006},
}

@InProceedings{Benites2018,
  author    = {Benites, Luis Alberto Contreras and Kastensmidt, Fernanda Lima},
  booktitle = {2018 IEEE 19th Latin-American Test Symposium (LATS)},
  title     = {Automated design flow for applying Triple Modular Redundancy (TMR) in complex digital circuits},
  year      = {2018},
  pages     = {1-4},
  doi       = {10.1109/LATW.2018.8349668},
  keywords  = {Tunneling magnetoresistance;Logic gates;Circuit faults;Optimization;Tools;Redundancy;Transient analysis;TMR;ASIC;equivalence checking;fault tolerant design;radiation effects},
}

@MastersThesis{Benites2018a,
  author   = {Benites, Luis Alberto Contreras},
  school   = {Universidad Federal de Río Grande del Sur},
  title    = {Automated Design Flow for Applying Triple Modular Redundancy in Complex Semi-Custom Digital Integrated Circuits},
  year     = {2018},
  month    = {7},
  type     = {mathesis},
  date     = {2018-07},
  editor   = {Luis Alberto Contreras Benites. -Porto Alegre: PGMI- CRO da UFRGS, 2018. 139 f.: il. Thesis},
  file     = {:/home/matt/Dropbox/Digital Library/Papers/Computer Engineering/Fault-Tolerance/TMR/Automated Design Flow for Applying Triple.pdf:PDF},
  keywords = {Fault tolerance. Radiation effects. TMR. Equivalence checking. Semi-custom design flow. ASIC. FPGA},
}

@Article{Hindman2011,
  author    = {Hindman, Nathan D. and Clark, Lawrence T. and Patterson, Dan W. and Holbert, Keith E.},
  journal   = {IEEE Transactions on Nuclear Science},
  title     = {Fully Automated, Testable Design of Fine-Grained Triple Mode Redundant Logic},
  year      = {2011},
  issn      = {0018-9499},
  month     = dec,
  number    = {6},
  pages     = {3046--3052},
  volume    = {58},
  abstract  = {A fully automated logic design methodology for radiation hardened by design high-speed logic using fine-grained triple modular redundancy (TMR) is presented. The methodology and circuits leverage commercial logic design automation tools. The circuit approach is validated for hardness using both heavy ion and proton broad beam testing. The base TMR self-correcting master-slave flip-flop is described, including testability features that disable the self-correction. The flow allows hardening of any synthesizable logic at clock frequencies comparable to unhardened designs and supports standard low-power techniques, e.g., clock gating and supply voltage scaling.},
  doi       = {10.1109/tns.2011.2169280},
  file      = {:/home/matt/Dropbox/Digital Library/Papers/Computer Engineering/Fault-Tolerance/TMR/Fully_Automated_Testable_Design_of_Fine-Grained_Triple_Mode_Redundant_Logic.pdf:PDF},
  keywords  = {Auto-place and route, logic synthesis, radiation hardening by design, standard cell library},
  publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
}

@Article{Kulis2017,
  author    = {Kulis, Syzmon},
  journal   = {Journal of Instrumentation},
  title     = {Single Event Effects mitigation with TMRG tool},
  year      = {2017},
  issn      = {1748-0221},
  month     = jan,
  number    = {01},
  pages     = {C01082--C01082},
  volume    = {12},
  abstract  = {View the article online for updates and enhancements. You may also like High throughput N-modular redundancy for error correction design of memristive stateful logic Xi Zhu, , Hui Xu et al.},
  doi       = {10.1088/1748-0221/12/01/c01082},
  file      = {:/home/matt/Dropbox/Digital Library/Papers/Computer Engineering/Fault-Tolerance/TMR/Single Event Effects mitigation with TMRG tool.pdf:PDF},
  publisher = {IOP Publishing},
}

@Misc{Williams2024,
  author       = {Williams, John},
  howpublished = {Personal communication},
  month        = aug,
  title        = {Personal communication},
  year         = {2024},
}

 @article{Khatri2018,
title = {RASP-TMR: An Automatic and Fast Synthesizable Verilog Code Generator Tool for the Implementation and Evaluation of TMR Approach},
journal = {International Journal of Advanced Computer Science and Applications},
doi = {10.14569/IJACSA.2018.090875},
url = {http://dx.doi.org/10.14569/IJACSA.2018.090875},
year = {2018},
publisher = {The Science and Information Organization},
volume = {9},
number = {8},
author = {Abdul Rafay Khatri and Ali Hayek and Josef Borcsok}
}

@InProceedings{Lee2017,
  author    = {Lee, Ganghee and Agiakatsikas, Dimitris and Wu, Tong and Cetin, Ediz and Diessel, Oliver},
  booktitle = {2017 IEEE 25th Annual International Symposium on Field-Programmable Custom Computing Machines (FCCM)},
  title     = {TLegUp: A TMR Code Generation Tool for SRAM-Based FPGA Applications Using HLS},
  year      = {2017},
  pages     = {129-132},
  doi       = {10.1109/FCCM.2017.57},
  keywords  = {Field programmable gate arrays;Benchmark testing;Tunneling magnetoresistance;Tools;Clocks;Registers;Hardware design languages;TMR;HLS;FPGA},
}

@Article{Lahti2019,
  author   = {Lahti, Sakari and Sjövall, Panu and Vanne, Jarno and Hämäläinen, Timo D.},
  journal  = {IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems},
  title    = {Are We There Yet? A Study on the State of High-Level Synthesis},
  year     = {2019},
  number   = {5},
  pages    = {898-911},
  volume   = {38},
  doi      = {10.1109/TCAD.2018.2834439},
  keywords = {Tools;Field programmable gate arrays;Measurement;Hardware;Productivity;Matlab;Hardware design languages;Electronic design automation and methodology;field-programmable gate array (FPGA);hardware description languages (HDLs);high-level synthesis (HLS);reconfigurable logic},
}

@TechReport{GalOn2012,
  author      = {Gal-On, Shay and Levy, Marcus},
  institution = {Embedded Microprocessor Benchmark Consortium},
  title       = {Exploring CoreMark™ – A Benchmark Maximizing Simplicity and Efficacy},
  year        = {2012},
  url         = {https://www.eembc.org/techlit/articles/coremark-whitepaper.pdf},
}

@InProceedings{Herklotz2020,
  author    = {Yann Herklotz and John Wickerson},
  booktitle = {ACM/SIGDA Int. Symp. on Field-Programmable Gate Arrays},
  title     = {Finding and Understanding Bugs in {FPGA} Synthesis Tools},
  year      = {2020},
  address   = {Seaside, CA, USA},
  publisher = {ACM},
  series    = {FPGA '20},
  doi       = {10.1145/3373087.3375310},
  isbn      = {978-1-4503-7099-8/20/02},
  keywords  = {automated testing, compiler defect, compiler testing, random program generation, random testing},
  numpages  = {11},
}

@article{Bessot1993,
  title={Design of SEU-hardened CMOS memory cells: the HIT cell},
  author={Denis Bessot and Raoul Velazco},
  journal={RADECS 93. Second European Conference on Radiation and its Effects on Components and Systems (Cat. No.93TH0616-3)},
  year={1993},
  pages={563-570},
}

@InProceedings{Berger2001,
  author    = {Berger, R.W. and Bayles, D. and Brown, R. and Doyle, S. and Kazemzadeh, A. and Knowles, K. and Moser, D. and Rodgers, J. and Saari, B. and Stanley, D. and Grant, B.},
  booktitle = {2001 IEEE Aerospace Conference Proceedings (Cat. No.01TH8542)},
  title     = {The RAD750™ - a radiation hardened PowerPC™ processor for high performance spaceborne applications},
  year      = {2001},
  pages     = {2263-2272 vol.5},
  volume    = {5},
  doi       = {10.1109/AERO.2001.931184},
  keywords  = {CMOS technology;Space technology;Radiation hardening;Microprocessors;Databases;CMOS process;Reduced instruction set computing;Application specific integrated circuits;Bridge circuits;Backplanes},
}

@Misc{Hagedoorn2021,
  author       = {Hagedoorn, Hilbert},
  howpublished = {Website},
  month        = feb,
  title        = {NASA Perseverance rover 200 MHZ CPU costs \$200K},
  year         = {2021},
  url          = {https://www.guru3d.com/story/nasa-perseverance-rover-200-mhz-cpu-costs-200k/},
  urldate      = {2024-08-20}
}

@InProceedings{Zhao2014,
  author    = {Zhao, Kai and Liu, Zhongli and Yu, Fang},
  booktitle = {2014 12th IEEE International Conference on Solid-State and Integrated Circuit Technology (ICSICT)},
  title     = {The avenue of FDSOI radiation hardening},
  year      = {2014},
  pages     = {1-3},
  doi       = {10.1109/ICSICT.2014.7021436},
  keywords  = {Radiation hardening (electronics);Random access memory;Abstracts;Field programmable gate arrays;Substrates;Transistors;MOS devices},
}

@Article{Swift2000,
  author   = {Swift, G.M. and Guertin, S.M.},
  journal  = {IEEE Transactions on Nuclear Science},
  title    = {In-flight observations of multiple-bit upset in DRAMs},
  year     = {2000},
  number   = {6},
  pages    = {2386-2391},
  volume   = {47},
  doi      = {10.1109/23.903781},
  keywords = {Random access memory;Error correction;Solid state circuits;Manufacturing;Propulsion;Packaging;Single event transient;Testing;Error analysis;Protons},
}

@InProceedings{Santos2017,
  author    = {dos Santos, Andr{\'e} Flores and Tambara, Lucas Antunes and Benevenuti, Fabio and Tonfat, Jorge and Kastensmidt, Fernanda Lima},
  booktitle = {Applied Reconfigurable Computing},
  title     = {Applying TMR in Hardware Accelerators Generated by High-Level Synthesis Design Flow for Mitigating Multiple Bit Upsets in SRAM-Based FPGAs},
  year      = {2017},
  address   = {Cham},
  editor    = {Wong, Stephan and Beck, Antonio Carlos and Bertels, Koen and Carro, Luigi},
  pages     = {202--213},
  publisher = {Springer International Publishing},
  abstract  = {This paper investigates the use of Triple Modular Redundancy (TMR) in hardware accelerators designs described in C programming language and synthesized by High Level Synthesis (HLS). A setup composed of a soft-core processor and a matrix multiplication design protected by TMR and embedded into an SRAM-based FPGA was analyzed under accumulated bit-flips in its configuration memory bits. Different configurations using single and multiple input and output workload data streams were tested. Results show that by using a coarse grain TMR with triplicated inputs, voters, and outputs, it is possible to reach 95{\%} of reliability by accumulating up to 61 bit-flips and 99{\%} of reliability by accumulating up to 17 bit-flips in the configuration memory bits. These numbers imply in a Mean Time Between Failure (MTBF) of the coarse grain TMR at ground level from 50{\%} to 70{\%} higher than the MTBF of the unhardened version for the same reliability confidence.},
  isbn      = {978-3-319-56258-2},
}

@Article{Beltrame2015,
  author    = {Beltrame, Giovanni},
  journal   = {PeerJ Computer Science},
  title     = {Triple Modular Redundancy verification via heuristic netlist analysis},
  year      = {2015},
  issn      = {2376-5992},
  month     = aug,
  pages     = {e21},
  volume    = {1},
  doi       = {10.7717/peerj-cs.21},
  publisher = {PeerJ},
}

@TechReport{Xilinx2017,
  institution = {Xilinx},
  title       = {Xilinx TMRTool User Guide (TMRTool Software Version 13.2)},
  year        = {2017},
  type        = {techreport},
  url         = {https://docs.amd.com/v/u/en-US/ug156-tmrtool},
}

@TechReport{Bridford2008,
  author      = {Bridford, Brendan and Carmichael, Carl and Wei Tseng, Chen},
  institution = {Xilinx},
  title       = {Single-Event Upset Mitigation Selection Guide},
  year        = {2008},
  month       = mar,
  type        = {techreport},
  url         = {https://docs.amd.com/v/u/en-US/xapp987},
}

@InProceedings{Holler2012,
  author    = {Christian Holler and Kim Herzig and Andreas Zeller},
  booktitle = {21st USENIX Security Symposium (USENIX Security 12)},
  title     = {Fuzzing with Code Fragments},
  year      = {2012},
  address   = {Bellevue, WA},
  month     = aug,
  pages     = {445--458},
  publisher = {USENIX Association},
  isbn      = {978-931971-95-9},
  url       = {https://www.usenix.org/conference/usenixsecurity12/technical-sessions/presentation/holler},
}

@InProceedings{Fioraldi2020,
  author    = {Fioraldi, Andrea and Maier, Dominik and Ei\ss{}feldt, Heiko and Heuse, Marc},
  booktitle = {Proceedings of the 14th USENIX Conference on Offensive Technologies},
  title     = {AFL++: combining incremental steps of fuzzing research},
  year      = {2020},
  address   = {USA},
  publisher = {USENIX Association},
  series    = {WOOT'20},
  abstract  = {In this paper, we present AFL++, a community-driven open-source tool that incorporates state-of-the-art fuzzing research, to make the research comparable, reproducible, combinable and--most importantly - useable. It offers a variety of novel features, for example its Custom Mutator API, able to extend the fuzzing process at many stages. With it, mutators for specific targets can also be written by experienced security testers. We hope for AFL++ to become a new baseline tool not only for current, but also for future research, as it allows to test new techniques quickly, and evaluate not only the effectiveness of the single technique versus the state-of-the-art, but also in combination with other techniques. The paper gives an evaluation of hand-picked fuzzing technologies -- shining light on the fact that while each novel fuzzing method can increase performance in some targets -- it decreases performance for other targets. This is an insight future fuzzing research should consider in their evaluations.},
  articleno = {10},
  numpages  = {1},
}

@InBook{Karp1972,
  author    = {Karp, Richard M.},
  editor    = {Miller, Raymond E. and Thatcher, James W. and Bohlinger, Jean D.},
  pages     = {85--103},
  publisher = {Springer US},
  title     = {Reducibility among Combinatorial Problems},
  year      = {1972},
  address   = {Boston, MA},
  isbn      = {978-1-4684-2001-2},
  abstract  = {A large class of computational problems involve the determination of properties of graphs, digraphs, integers, arrays of integers, finite families of finite sets, boolean formulas and elements of other countable domains. Through simple encodings from such domains into the set of words over a finite alphabet these problems can be converted into language recognition problems, and we can inquire into their computational complexity. It is reasonable to consider such a problem satisfactorily solved when an algorithm for its solution is found which terminates within a number of steps bounded by a polynomial in the length of the input. We show that a large number of classic unsolved problems of covering, matching, packing, routing, assignment and sequencing are equivalent, in the sense that either each of them possesses a polynomial-bounded algorithm or none of them does.},
  booktitle = {Complexity of Computer Computations: Proceedings of a symposium on the Complexity of Computer Computations, held March 20--22, 1972, at the IBM Thomas J. Watson Research Center, Yorktown Heights, New York, and sponsored by the Office of Naval Research, Mathematics Program, IBM World Trade Corporation, and the IBM Research Mathematical Sciences Department},
  doi       = {10.1007/978-1-4684-2001-2_9},
  url       = {https://doi.org/10.1007/978-1-4684-2001-2_9},
}

@Unpublished{Sorensson2005,
  author = {Sorensson, Niklas and Een, Niklas},
  title  = {Minisat v1.13 - A SAT solver with conflict-clause minimization},
  year   = {2005},
  url    = {http://minisat.se/downloads/MiniSat_v1.13_short.pdf},
  urldate = {2025-01-26}
}

@Article{Audemard2018,
  author    = {Audemard, Gilles and Simon, Laurent},
  journal   = {International Journal on Artificial Intelligence Tools},
  title     = {On the Glucose SAT solver},
  year      = {2018},
  number    = {01},
  pages     = {1840001},
  volume    = {27},
  publisher = {World Scientific},
}

@InBook{Barrett2018,
  author    = {Barrett, Clark and Tinelli, Cesare},
  editor    = {Clarke, Edmund M. and Henzinger, Thomas A. and Veith, Helmut and Bloem, Roderick},
  pages     = {305--343},
  publisher = {Springer International Publishing},
  title     = {Satisfiability Modulo Theories},
  year      = {2018},
  address   = {Cham},
  isbn      = {978-3-319-10575-8},
  abstract  = {Satisfiability Modulo Theories (SMT) refers to the problem of determining whether a first-order formula is satisfiable with respect to some logical theory. Solvers based on SMT are used as back-end engines in model-checking applications such as bounded, interpolation-based, and predicate-abstraction-based model checking. After a brief illustration of these uses, we survey the predominant techniques for solving SMT problems with an emphasis on the lazy approach, in which a propositional satisfiability (SAT) solver is combined with one or more theory solvers. We discuss the architecture of a lazy SMT solver, give examples of theory solvers, show how to combine such solvers modularly, and mention several extensions of the lazy approach. We also briefly describe the eager approach in which the SMT problem is reduced to a SAT problem. Finally, we discuss how the basic framework for determining satisfiability can be extended with additional functionality such as producing models, proofs, unsatisfiable cores, and interpolants.},
  booktitle = {Handbook of Model Checking},
  doi       = {10.1007/978-3-319-10575-8_11},
  url       = {https://doi.org/10.1007/978-3-319-10575-8_11},
}

@InProceedings{Moura2008,
  author    = {de Moura, Leonardo and Bj{\o}rner, Nikolaj},
  booktitle = {Tools and Algorithms for the Construction and Analysis of Systems},
  title     = {Z3: An Efficient SMT Solver},
  year      = {2008},
  address   = {Berlin, Heidelberg},
  editor    = {Ramakrishnan, C. R. and Rehof, Jakob},
  pages     = {337--340},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {Satisfiability Modulo Theories (SMT) problem is a decision problem for logical first order formulas with respect to combinations of background theories such as: arithmetic, bit-vectors, arrays, and uninterpreted functions. Z3 is a new and efficient SMT Solver freely available from Microsoft Research. It is used in various software verification and analysis applications.},
  isbn      = {978-3-540-78800-3},
}

@InProceedings{Niemetz2023,
  author    = {Niemetz, Aina and Preiner, Mathias},
  booktitle = {Computer Aided Verification},
  title     = {Bitwuzla},
  year      = {2023},
  address   = {Cham},
  editor    = {Enea, Constantin and Lal, Akash},
  pages     = {3--17},
  publisher = {Springer Nature Switzerland},
  abstract  = {Bitwuzla is a new SMT solver for the quantifier-free and quantified theories of fixed-size bit-vectors, arrays, floating-point arithmetic, and uninterpreted functions. This paper serves as a comprehensive system description of its architecture and components. We evaluate Bitwuzla's performance on all benchmarks of supported logics in SMT-LIB and provide a comparison against other state-of-the-art SMT solvers.},
  isbn      = {978-3-031-37703-7},
}

﻿
@Article{Weber2019,
  author    = {Weber, Tjark and Conchon, Sylvain and D{\'e}harbe, David and Heizmann, Matthias and Niemetz, Aina and Reger, Giles},
  journal   = {Journal on Satisfiability, Boolean Modeling and Computation},
  title     = {The SMT Competition 2015--2018},
  year      = {2019},
  issn      = {1574-0617},
  note      = {1},
  pages     = {221-259},
  volume    = {11},
  abstract  = {The International Satisfiability Modulo Theories Competition is an annual competition between Satisfiability Modulo Theories (SMT) solvers. The 2018 edition of the competition was part of the FLoC Olympic Games, which comprised 14 competitions in various areas of computational logic. We report on the design and selected results of the SMT Competition during the last FLoC Olympiad, from 2015 to 2018. These competitions set several new records regarding the number of participants, number of benchmarks used, and amount of computation performed.},
  doi       = {10.3233/SAT190123},
  keywords  = {SMT solver; SMT-COMP; SMT-LIB; Satisfiability Modulo Theories; competitions},
  publisher = {IOS Press},
  url       = {https://doi.org/10.3233/SAT190123},
}

@InProceedings{Dutertre2014,
  author    = {Dutertre, Bruno},
  booktitle = {Computer Aided Verification},
  title     = {Yices 2.2},
  year      = {2014},
  address   = {Cham},
  editor    = {Biere, Armin and Bloem, Roderick},
  pages     = {737--744},
  publisher = {Springer International Publishing},
  abstract  = {Yices is an SMT solver developed by SRI International. The first version of Yices was released in 2006 and has been continuously updated since then. In 2007, we started a complete re-implementation of the solver to improve performance and increase modularity and flexibility. We describe the latest release of Yices, namely, Yices 2.2. We present the tool's architecture and discuss the algorithms it implements, and we describe recent developments such as support for the SMT-LIB 2.0 notation and various performance improvements.},
  isbn      = {978-3-319-08867-9},
}

@Misc{mcyfault,
    author = {Engelhardt, N},
    title = {Using MCY for fault injection},
    year = {2022},
    urldate = {2025-01-26},
    url = {https://github.com/nakengelhardt/faultinjection_mcy}
}

@Misc{Burch2024,
  author = {Burch, Carl and Kluter, Theo and Maehne, Torsten and Walsh, Kevin and Hutchens, David H. and Orlowski, Marcin and Niget, Tom and Berman, Moshe and Cruz Franqueira, Theldo},
  month  = {8},
  title  = {Logisim-evolution},
  year   = {2024},
  url    = {https://github.com/logisim-evolution/logisim-evolution/releases},
}

@Comment{jabref-meta: databaseType:bibtex;}
